{"version":3,"sources":["Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","style","backgroundColor","bcolor","onClick","onSelect","text","App","useState","number","setnumber","className","value","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAWeA,EATA,SAACC,GACZ,OACI,mCACA,wBAAQC,MAAO,CAAEC,gBAAgBF,EAAMG,QAAUC,QAASJ,EAAMK,SAAhE,SAA2EL,EAAMM,U,kCCqC1EC,MApCf,WAAgB,IAAD,EAEeC,mBAAS,GAFxB,mBAENC,EAFM,KAEEC,EAFF,KAkBb,OACE,mCACE,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,6BAAKF,IACL,gCACE,cAAC,EAAD,CAAQH,KAAM,cAAC,IAAD,IAAgBH,OAAO,UAAUE,SArBxC,WACjBK,EAAUD,EAAS,MAqBT,cAAC,EAAD,CAAQH,KAAM,cAAC,IAAD,IAAqBH,OAAO,UACxCE,SApBK,WACjBK,GAAU,SAACE,GACT,OAAIA,EAAQ,GACVF,EAAU,GACHG,MAAM,YAGND,EAAQ,qBCRRE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a93516c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = (props) =>{\r\n    return (\r\n        <>\r\n        <button style={{ backgroundColor:props.bcolor }} onClick={props.onSelect}>{props.text}</button>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Button;","import { useState } from 'react';\nimport './App.css';\nimport Button from './Button';\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\nimport ExposureNeg1Icon from '@material-ui/icons/ExposureNeg1';\n\nfunction App() {\n\n  const [number, setnumber] = useState(0)\n\n  const increament = () => {\n    setnumber(number + 1);\n  }\n  const decreament = () => {\n    setnumber((value) => {\n      if (value < 1) {\n        setnumber(0)\n        return alert(\"reach 0\");\n      }\n      else {\n        return value - 1;\n      }\n    });\n  }\n  return (\n    <>\n      <div className=\"back\">\n        <div className=\"box\">\n          <div className=\"box1\">\n            <h1>{number}</h1>\n            <div>\n              <Button text={<PlusOneIcon/>} bcolor=\"#3333ff\" onSelect={increament} />\n              <Button text={<ExposureNeg1Icon/>} bcolor=\"#ff3300\"\n                onSelect={decreament} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}